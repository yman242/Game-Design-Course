<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>useLoop = false;
alarm0Loop = false;

setup = false;

myMaster = 0;

shieldHealth = 25;
shieldMax = shieldHealth;
shieldArray = 0;

regenValue = 10;
regenSpeed = 5;

chargeShot = 0;
chargeSpeedPerShip = 3;
chargeGoal = 100;

attackSpeed = 1;
normalAttackSpeed = attackSpeed;

alarm[2] = 30*regenSpeed;

target = Monster;

sizeX = 128;//256
sizeY = 32;//64
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0;i&lt;array_length_1d(shieldArray);i++)
{
    with (shieldArray[i]) instance_destroy();
}

if(chargeShot &gt; 0 &amp;&amp; instance_exists(chargeShot))
{
        with(chargeShot) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Regen time
shieldHealth += regenValue;
if(shieldHealth&gt;shieldMax)
{
    shieldHealth=shieldMax;
}

alarm[2] = 30 * regenSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>useLoop = true;
/*//This is code to edit things on the fly.
numOfShips = array_length_1d(myMaster.ships)
if(numOfShips &gt; 1)
{
    if(myMaster.strategyType == 2)
    {
        if(array_length_1d(shieldArray)&gt;0 &amp;&amp; instance_exists(shieldArray[0]))
        {
            shieldX = shieldArray[0].x;
            shieldY = shieldArray[0].y;
        }
        else
        {
            shieldX = 0;
            shieldY = 0;
        }
        
        for(i=0;i&lt;array_length_1d(shieldArray);i++)
        {
            with (shieldArray[i]) instance_destroy();
        }

        shieldArray = 0;
        
        if(numOfShips&gt;5)
        {
            shieldNum = 11;
        }
        else if(numOfShips&gt;4)
        {
            shieldNum = 9;
        }
        else if(numOfShips&gt;3)
        {
            shieldNum = 7;
        }
        else if(numOfShips&gt;2)
        {
            shieldNum = 5;
        }
        else if(numOfShips&gt;1)
        {
            shieldNum = 3;
        }
        else if(numOfShips&gt;0)
        {
            shieldNum = 0;
        }
        
        for(i=0;i&lt;shieldNum;i++)
        {
            shieldArray[i] = instance_create(shieldX,shieldY+sizeY*i,obj_ShieldBlock);
            shieldArray[i].myController = id;
        }
        
        sizeofShields = array_length_1d(shieldArray);
        
        if(sizeofShields&gt;1)
        {
            shieldArray[0].imageIndex = 0;
            shieldArray[sizeofShields-1].imageIndex = 2;
        }
    }
}
else
{
    alarm[0] = 1;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This MUST BE CALLED AFTER GETTING A MASTER OR WHEN STRAT CHANGES. This sets up the FormationController!

alarm0Loop = true;
/*
setup = true;

numOfShips = array_length_1d(myMaster.ships)

if(target == Ship) //basiclly if it's a monster flip it
{
    flipper = -1;
}
else
{
    flipper = 1;
}

if(numOfShips == 1)
{
    myMaster.strategyType = 0;
}

for(i=0;i&lt;array_length_1d(shieldArray);i++)
{
    with (shieldArray[i]) instance_destroy();
}

shieldArray = 0;
attackSpeed = normalAttackSpeed;

//sizeX = 128;//256
//sizeY = 32//64;

if(!(chargeShot &gt; 0 ) &amp;&amp; myMaster.strategyType == 1) //messes with the charge orb cause we can't have it resetting all the time.
{
        chargeShot = instance_create(x,y,obj_ShotOrb);
        chargeShot.myController = id;
}
else if(chargeShot &gt; 0 &amp;&amp; myMaster.strategyType != 1)
{
        with(chargeShot) instance_destroy();
        chargeShot = 0;
}

if(myMaster.strategyType == 0)
{
    attackSpeed = .5;
}
else if(myMaster.strategyType == 1)
{
    chargeShot.x = myMaster.ships[0].x+sizeX*2*flipper;
    chargeShot.y =  myMaster.ships[0].y+sizeY;
}
else if(myMaster.strategyType == 2)
{
    if(numOfShips&gt;5)
    {
        for(i=0;i&lt;11;i++)
        {
            shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2*flipper,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
        }
    }
    else if(numOfShips&gt;4)
    {
        for(i=0;i&lt;9;i++)
        {
            shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2*flipper,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
        }
    }
    else if(numOfShips&gt;3)
    {
        for(i=0;i&lt;7;i++)
        {
            shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2*flipper,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
        }
    }
    else if(numOfShips&gt;2)
    {
        for(i=0;i&lt;5;i++)
        {
            shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2*flipper,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
        }
    }
    else if(numOfShips&gt;1)
    {
        for(i=0;i&lt;3;i++)
        {
            shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2*flipper,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
        }
    }
    else if(numOfShips&gt;0)
    {
        //shieldArray[0] = instance_create(myMaster.ships[0].x+sizeX*2,myMaster.ships[0].y+sizeY*0,obj_ShieldBlock);
    }
    
    sizeofShields = array_length_1d(shieldArray);
    
    if(sizeofShields&gt;1)
    {
        shieldArray[0].imageIndex = 0;
        shieldArray[sizeofShields-1].imageIndex = 2;
        offset = sizeY *((sizeofShields+1)/2)
        for(i=0;i&lt;sizeofShields;i++)
        {
            shieldArray[i].y -= offset;
            shieldArray[i].myController = id;
        }
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(alarm0Loop)
{
     setup = true;
    
    numOfShips = array_length_1d(myMaster.ships)
    
    if(target == Ship) //basiclly if it's a monster flip it
    {
        flipper = -1;
    }
    else
    {
        flipper = 1;
    }
    
    if(numOfShips == 1)
    {
        myMaster.strategyType = 0;
    }
    
    for(i=0;i&lt;array_length_1d(shieldArray);i++)
    {
        with (shieldArray[i]) instance_destroy();
    }
    
    shieldArray = 0;
    attackSpeed = normalAttackSpeed;
    
    //sizeX = 128;//256
    //sizeY = 32//64;
    
    if(!(chargeShot &gt; 0 ) &amp;&amp; myMaster.strategyType == 1) //messes with the charge orb cause we can't have it resetting all the time.
    {
            chargeShot = instance_create(x,y,obj_ShotOrb);
            chargeShot.myController = id;
    }
    else if(chargeShot &gt; 0 &amp;&amp; myMaster.strategyType != 1)
    {
            with(chargeShot) instance_destroy();
            chargeShot = 0;
    }
    
    if(myMaster.strategyType == 0)
    {
        attackSpeed = .5;
    }
    else if(myMaster.strategyType == 1)
    {
        if(array_length_1d(myMaster.ships)&gt;0 &amp;&amp; instance_exists(myMaster.ships[0]))
        {
            chargeShot.x = myMaster.ships[0].x+sizeX*2*flipper;
            chargeShot.y =  myMaster.ships[0].y+sizeY;
        }
    }
    else if(myMaster.strategyType == 2)
    {
        if(numOfShips&gt;5)
        {
            for(i=0;i&lt;11;i++)
            {
                shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2*flipper,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
            }
        }
        else if(numOfShips&gt;4)
        {
            for(i=0;i&lt;9;i++)
            {
                shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2*flipper,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
            }
        }
        else if(numOfShips&gt;3)
        {
            for(i=0;i&lt;7;i++)
            {
                shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2*flipper,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
            }
        }
        else if(numOfShips&gt;2)
        {
            for(i=0;i&lt;5;i++)
            {
                shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2*flipper,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
            }
        }
        else if(numOfShips&gt;1)
        {
            for(i=0;i&lt;3;i++)
            {
                shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2*flipper,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
            }
        }
        else if(numOfShips&gt;0)
        {
            //shieldArray[0] = instance_create(myMaster.ships[0].x+sizeX*2,myMaster.ships[0].y+sizeY*0,obj_ShieldBlock);
        }
        
        sizeofShields = array_length_1d(shieldArray);
        
        if(sizeofShields&gt;1)
        {
            shieldArray[0].imageIndex = 0;
            shieldArray[sizeofShields-1].imageIndex = 2;
            offset = sizeY *((sizeofShields+1)/2)
            
            if(target == Ship)
            {
                for(i=0;i&lt;sizeofShields;i++)
                {
                    shieldArray[i].imageIndex = 4;
                }
                
                shieldArray[0].imageIndex = 3;
                shieldArray[sizeofShields-1].imageIndex = 5;
            }
            
            for(i=0;i&lt;sizeofShields;i++)
            {
                shieldArray[i].y -= offset;
                shieldArray[i].myController = id;
            }
        }
    }
    alarm0Loop = false;
}

if(useLoop)
{
    //This is code to edit things on the fly.
    numOfShips = array_length_1d(myMaster.ships)
    if(numOfShips &gt; 1)
    {
        if(myMaster.strategyType == 2)
        {
            if(array_length_1d(shieldArray)&gt;0 &amp;&amp; instance_exists(shieldArray[0]))
            {
                shieldX = shieldArray[0].x;
                shieldY = shieldArray[0].y;
            }
            else
            {
                shieldX = 0;
                shieldY = 0;
            }
            
            for(i=0;i&lt;array_length_1d(shieldArray);i++)
            {
                with (shieldArray[i]) instance_destroy();
            }
    
            shieldArray = 0;
            
            if(numOfShips&gt;5)
            {
                shieldNum = 11;
            }
            else if(numOfShips&gt;4)
            {
                shieldNum = 9;
            }
            else if(numOfShips&gt;3)
            {
                shieldNum = 7;
            }
            else if(numOfShips&gt;2)
            {
                shieldNum = 5;
            }
            else if(numOfShips&gt;1)
            {
                shieldNum = 3;
            }
            else if(numOfShips&gt;0)
            {
                shieldNum = 0;
            }
            
            for(i=0;i&lt;shieldNum;i++)
            {
                shieldArray[i] = instance_create(shieldX,shieldY+sizeY*i,obj_ShieldBlock);
                shieldArray[i].myController = id;
            }
            
            sizeofShields = array_length_1d(shieldArray);
            
            if(sizeofShields&gt;1)
            {
                shieldArray[0].imageIndex = 0;
                shieldArray[sizeofShields-1].imageIndex = 2;
                
                if(target == Ship)
                {
                    for(i=0;i&lt;sizeofShields;i++)
                    {
                        shieldArray[i].imageIndex = 4;
                    }
                
                    shieldArray[0].imageIndex = 3;
                    shieldArray[sizeofShields-1].imageIndex = 5;
                }
            }
        }
    }
    else
    {
        alarm[0] = 1;
    }

}
useLoop = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
