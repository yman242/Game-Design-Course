<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>setup = false;

myMaster = 0;

shieldHealth = 100;
shieldMax = shieldHealth;
shieldArray = 0;

regenValue = 10;
regenSpeed = 5;

alarm[1] = 30*regenSpeed;

target = Monster;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Regen time
shieldHealth += regenValue;
if(shieldHealth&gt;shieldMax)
{
    shieldHealth=shieldMax;
}

alarm[1] = 30 * regenSpeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This MUST BE CALLED AFTER GETTING A MASTER OR WHEN STRAT CHANGES. This sets up the FormationController!

setup = true;

numOfShips = array_length_1d(myMaster.ships)

for(i=0;i&lt;array_length_1d(shieldArray);i++)
{
    with (shieldArray[i]) instance_destroy();
}

shieldArray = 0;

sizeX = 128;//256
sizeY = 32//64;

if(myMaster.strategyType == 2)
{
    if(numOfShips&gt;5)
    {
        for(i=0;i&lt;11;i++)
        {
            shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
        }
    }
    else if(numOfShips&gt;4)
    {
        for(i=0;i&lt;9;i++)
        {
            shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
        }
    }
    else if(numOfShips&gt;3)
    {
        for(i=0;i&lt;7;i++)
        {
            shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
        }
    }
    else if(numOfShips&gt;2)
    {
        for(i=0;i&lt;5;i++)
        {
            shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
        }
    }
    else if(numOfShips&gt;1)
    {
        for(i=0;i&lt;3;i++)
        {
            shieldArray[i] = instance_create(myMaster.ships[0].x+sizeX*2,myMaster.ships[0].y+sizeY*i,obj_ShieldBlock);
        }
    }
    else if(numOfShips&gt;0)
    {
        //shieldArray[0] = instance_create(myMaster.ships[0].x+sizeX*2,myMaster.ships[0].y+sizeY*0,obj_ShieldBlock);
    }
    
    sizeofShields = array_length_1d(shieldArray);
    
    if(sizeofShields&gt;1)
    {
        shieldArray[0].imageIndex = 0;
        shieldArray[sizeofShields-1].imageIndex = 2;
        offset = sizeY *((sizeofShields+1)/2)
        for(i=0;i&lt;sizeofShields;i++)
        {
            shieldArray[i].y -= offset;
            shieldArray[i].myController = id;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//things
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
