<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_Planet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Planet Size Variables
var scalex = 0.3, scaley = 0.3;
isFocus = true;

// Planet Variables
var planet_name;
var type;
var threat;
var population;
var planet_distance;
var orbspeed;
var orbstep;
var myRef;

var isDestroyed = false;
var hasShownDestruction = false;

isSelected = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (isFocus) {
    // Mouse in bounds?
    mouseInBounds = false;
    info_created = true;
    
    scalex = global.MIN_SCALE;
    scaley = global.MIN_SCALE;
    
    if ((mouse_x &gt; x - sprite_width) &amp;&amp; (mouse_x &lt; x + sprite_width)) {
        if ((mouse_y &gt; y - (sprite_height/4)*3) &amp;&amp; (mouse_y &lt; y + (sprite_height/4)*3)) {
            // Mouse is in bounds
            scalex = global.MAX_SCALE;
            scaley = global.MAX_SCALE;
            
            mouseInBounds = true;
        }
    }
    
    if (mouseInBounds &amp;&amp; mouse_check_button_pressed(mb_left) &amp;&amp; !global.mouse_in_info_bounds) {
        scriptDeselectAllPlanets();
    
        // Screen Shake (magnitude in pixels, Duration in steps)
        scriptShakeScreen(10, 30);
        
        isSelected = true;
        global.currently_selected_planet_id = myRef;
    }
    
    if (isSelected &amp;&amp; mouse_check_button_pressed(mb_left) &amp;&amp; !mouseInBounds &amp;&amp; !global.mouse_in_info_bounds) {
        scriptDeselectAllPlanets();
    }
    
    if (isSelected) {
        global.orbitSpeed = 0;
        scalex = global.MAX_SCALE;
        scaley = global.MAX_SCALE;
    }
    
    if (isSelected &amp;&amp; !info_created) {
        instance_create(x + 25, y - 10, obj_planet_info);
        //scriptCenterView(x, y, zoomlevel);
        info_created = true;
    }
    
    // Planet Rotation
    orbStepAngle = global.orbitSpeed;
    
    var newX = global.CENTER_OF_GALAXY_X + (x - global.CENTER_OF_GALAXY_X) * cos(orbStepAngle) - (y - global.CENTER_OF_GALAXY_Y) * sin(orbStepAngle);
    var newY = global.CENTER_OF_GALAXY_Y + (x - global.CENTER_OF_GALAXY_X) * sin(orbStepAngle) + (y - global.CENTER_OF_GALAXY_Y) * cos(orbStepAngle);
    
    x = newX;
    y = newY;
    
    image_xscale = scalex;
    image_yscale = scaley;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (isSelected) {
     image_blend = make_color_rgb(100, 255, 100);
} else {
    image_blend = -1;
}

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>300,300</point>
  </PhysicsShapePoints>
</object>
