<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_subMenuFleetManagement</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var fleet_id_ref = FleetManager.fleet_instance_to_edit;

newx = x + 50;
newy = y + 30;

// Generate 3 captains, put them in a list
// spawn the 3 hire buttons with the values of the captains
for (i=0; i&lt;3; i+=1)
{
    newCaptains[i] = scriptGenerateCaptain();
    
    HireButton = instance_create(newx+700, newy + 60 + (150 * i), obj_hire_captain);
    HireButton.fleet_id_ref = fleet_id_ref;
    HireButton.captain = newCaptains[i];
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Check for keyboard input for back action
if (keyboard_check_pressed(vk_escape) || keyboard_check_pressed(vk_backspace)) {
    // Destroy the menu and buttons
    // set focus back to the fleet manager
    with(FleetManager) {
        inFocus = true;
    }
    
    // destroy all of the hire buttons
    with (obj_hire_captain) {
        instance_destroy();
    }
    
    // destroy the menu object (should clear the array and focus)
    with (obj_hire_captain_menu) {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the captains
draw_self();

for(i=0;i&lt;3;i+=1)
{
    newx = x + 50;
    newy = y + 30 + (i * 150);

    // Draw Setup
    draw_set_font(font_Text);
    draw_set_color(c_white);
    
    scriptDrawCaptain(newx, newy, newCaptains[i]);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>450,450</point>
  </PhysicsShapePoints>
</object>
