<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_boss_arrow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//calculate the direction to face
x1 = x;//view_xview[view_current] + (view_wview[view_current] / 2);
y1 = y;//view_yview[view_current] + (view_hview[view_current] / 2);
x2 = global.bossPlanetId.x;
y2 = global.bossPlanetId.y;

image_angle = point_direction(x1, y1, x2, y2);

// Calculate the location of the arrow only if it is outside of the screen
if ((x2 &lt; (view_xview[view_current] + view_wview[view_current])) &amp;&amp; x2 &gt; (view_xview[view_current]))
{
    x = x2;
} else if (x2 &gt; (view_xview[view_current] + view_wview[view_current])) {
    x = (view_xview[view_current] + view_wview[view_current]) - 65;
} else {
    x = view_xview[view_current] + 65;
}

if ((y2 &lt; (view_yview[view_current] + view_hview[view_current])) &amp;&amp; y2 &gt; (view_yview[view_current]))
{
    y = y2;
} else if (y2 &gt; (view_yview[view_current] + view_hview[view_current])) {
    y = (view_yview[view_current] + view_hview[view_current]) - 65;
} else {
    y = view_yview[view_current] + 65;
}

// if the planet is within the confines of the screen hide it
if (((x2 &lt; (view_xview[view_current] + view_wview[view_current])) &amp;&amp; x2 &gt; (view_xview[view_current])) &amp;&amp; ((y2 &lt; (view_yview[view_current] + view_hview[view_current])) &amp;&amp; y2 &gt; (view_yview[view_current])))
{
    visible = false;
} else {
    visible = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>60,61</point>
    <point>62,62</point>
  </PhysicsShapePoints>
</object>
