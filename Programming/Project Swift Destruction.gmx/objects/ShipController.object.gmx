<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>target = 0; //The controller's target

global.buttonTier++;//This adds code to get some UI for the controller.
stratButtonTier = global.buttonTier;
buttonSprite = sprite_Formations;
buttonWidth = sprite_get_width(buttonSprite);
buttonHeight = sprite_get_height(buttonSprite);
buttonNumber = 2; //How many buttons we printing?



general = 0;
generalCooldown = 10;
generalCooling = false;

strategyType = 0;

shipType = 1;

numOfShips = 9;

stratPosition = 0

//stratPosition = scriptShipStratLocations(strategyType);

ships = 0;

//ships = scriptShipControllerSetup(shipType,numOfShips,stratPosition,x,y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>generalCooling = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ships = scriptUpdateArray(ships);

if(target == 0)
{
    targetHolder = instance_nearest(x, y, Monster);
    target = targetHolder.myController;
}
else if(array_length_1d(target.ships) == 0)
{
    targetHolder = instance_nearest(x, y, Monster);
    target = targetHolder.myController;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Button collision
for(i = 0; i&lt;buttonNumber;i++)
{
    if(scriptRectanglePointCollision(mouse_x,mouse_y, view_xview[view_current] + buttonWidth*i,view_yview[view_current] + view_hview[view_current]-(stratButtonTier*buttonHeight),view_xview[view_current] + buttonWidth*(i+1),view_yview[view_current] + view_hview[view_current]-((stratButtonTier-1)*buttonHeight)))
    {
        if(i == 0)
        {
            strategyType++;
            if(strategyType&gt;2)
            {
                strategyType = 0;
            }
            
            stratPosition = scriptShipStratLocations(strategyType);
    
            if(array_length_1d(ships)&gt;0)
            {
                scriptChangePosition(ships,stratPosition,ships[0].x,ships[0].y);
            }
        }
        else if(i==1 &amp;&amp; global.battleState == 3 &amp;&amp; !generalCooling)
        {
            generalCooling = true;
            alarm[0] = 30*generalCooldown;
            for(k = 0; k&lt;array_length_1d(ships); k++)
            {   
                ships[k].alarm[3] = 1;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0;i&lt;buttonNumber;i++)
{
    //draw_sprite(buttonSprite,i,i*buttonWidth,view_hview[view_current]-(buttonHeight*stratButtonTier));
    draw_sprite(buttonSprite,i,view_xview[view_current] + i*buttonWidth, view_yview[view_current] + view_hview[view_current]-(buttonHeight*stratButtonTier));
}

if(generalCooldown)
{
    draw_sprite_ext(sprite_Cooldown,0,view_xview[view_current] + 1*buttonWidth,view_yview[view_current] + view_hview[view_current]-(buttonHeight*stratButtonTier)+(1-(alarm[0]/(30*generalCooldown)))*buttonHeight,1,alarm[0]/(30*generalCooldown),0,c_white,100);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(strategyType == 0)
{
    strategyType = 1;
}
else
{
    strategyType = 0;
}


stratPosition = scriptShipStratLocations(strategyType);

if(array_length_1d(ships)&gt;0)
{
    scriptChangePosition(ships,stratPosition,ships[0].x,ships[0].y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (ships[0]) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
