<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite5_Orb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spriteImage = sprite_index;

sizeX = sprite_get_width(spriteImage);
sizeY = sprite_get_height(spriteImage);

scale = 0;

color = c_aqua;
myController = 0;

charge = 0;
chargeUpdate = 1;

alarm[0] = 30*chargeUpdate;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.battleState == 3) //If we're in battle
{
    for(i = 0; i&lt;array_length_1d(myController.myMaster.ships);i++)
    {
        charge += myController.chargeSpeedPerShip;
    }
    
    scale = charge/myController.chargeGoal;
}
alarm[0] = 30*chargeUpdate;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.battleState == 3) //If we're in battle
{
    for(k=0;k&lt;array_length_1d(myController.myMaster.ships);k++)
    {
        if(instance_exists(myController.myMaster.ships[k]))
        {
            widthHolder = sprite_get_width(myController.myMaster.ships[k].sprite_index)/2;
            heightHolder = sprite_get_height(myController.myMaster.ships[k].sprite_index)/2;
            
            
            directionHolder = point_direction(myController.myMaster.ships[k].x+widthHolder,myController.myMaster.ships[k].y+heightHolder,x+sizeX/2,y+sizeY/2);
            
            scriptParticleEngine(myController.myMaster.ships[k].x +widthHolder,myController.myMaster.ships[k].y+heightHolder,0,random(10),50,40,directionHolder-5,directionHolder+5,5,6,color,sprite_SoftParticle);
        }
    }
    
    if(charge&gt;=myController.chargeGoal)
    {
        tempShipHolder = myController.myMaster.target;
        
        charge = 0
        scale = 0;
        holder = instance_create(x,y,obj_ShotOrbLaunched);
        holder.target = myController.target;
        
        value = array_length_1d(tempShipHolder.ships);
        if(value&gt;0)
        {
            value --;
            value = random(value);
        
            holder.direction = point_direction(x,y,tempShipHolder.ships[value].x,tempShipHolder.ships[value].y);
        }
        else
        {
            holder.direction = 180;
        }
    }
}
else
{   
    charge = 0
    scale = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spriteImage,0,(x+sizeX/2)-(scale*sizeX/2),(y+sizeY/2)-(scale*sizeY/2),scale,scale,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
