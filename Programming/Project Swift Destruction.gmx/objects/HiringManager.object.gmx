<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fleet_id_ref = FleetManagerNew.tab_selected;

isOnHire = false;
isOnClose = false;

x = view_xview[view_current] + ((view_wview[view_current] / 2) - (sprite_get_width(sprite_fm_replace_cpt_false) / 2));
y = view_yview[view_current] + ((view_hview[view_current] / 2) - (sprite_get_height(sprite_fm_replace_cpt_false) / 2));

// Generate a captain to hire
newCaptain = scriptGenerateCaptain();

if (!global.bg_50_created)
{
    instance_create(0,0,obj_trans_bg_50);
    global.bg_50_created = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (obj_trans_bg_50) {
    instance_destroy();
}
global.bg_50_created = false;

FleetManagerNew.isFocused = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Check for keyboard input for back action
if (keyboard_check_pressed(vk_escape) || keyboard_check_pressed(vk_backspace)) {
    // Cancel the hire selection
    // set focus back to the fleet manager
    with(FleetManagerNew) {
        isFocused = true;
    }
}

// mouse on hire button
if (((mouse_x &gt;= x+360) &amp;&amp; (mouse_x &lt;= x+542)) &amp;&amp; ((mouse_y &gt;= y+455) &amp;&amp; (mouse_y &lt;= y+508))) {
    isOnHire = true;
} else {
    isOnHire = false;
}

// Hired?
if ((isOnHire) &amp;&amp; (mouse_check_button_released(mb_left)) &amp;&amp; (global.imperialCredits &gt;= 50)) {
    // Hire this captain
    global.fleet[fleet_id_ref] = newCaptain;
    global.imperialCredits -= 50;
    instance_destroy();
}

if ((isOnHire) &amp;&amp; (mouse_check_button_released(mb_left)) &amp;&amp; (global.imperialCredits &lt; 50)) {
    // display the insufficient funds error
}


cl_x = x + 620;
cl_y = y + 20;
if ((mouse_x &gt;= cl_x) &amp;&amp; (mouse_x &lt;= cl_x + sprite_get_width(sprite_close_true))) {
    if ((mouse_y &gt;= cl_y) &amp;&amp; (mouse_y &lt;= cl_y + sprite_get_height(sprite_close_true))) {
        isOnClose = true;
    } else {
        isOnClose = false;
    }
} else {
    isOnClose = false;
}

if ((isOnClose) &amp;&amp; (mouse_check_button_released(mb_left))) {
    // Close
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (isOnHire) {
    draw_sprite(sprite_fm_replace_cpt_true, -1, x, y);
} else {
    draw_sprite(sprite_fm_replace_cpt_false, -1, x, y);
}

// Captain Text
draw_set_halign(fa_center);

text_x = x + (sprite_get_width(sprite_fm_replace_cpt_true) / 2);
//text_y = y + (sprite_get_height(sprite_fm_replace_cpt_true) / 2);
text_y = y+100;

draw_text(text_x, text_y, "Abilities");
switch(newCaptain.ability) {
    case 0:
        draw_text(text_x, text_y+25, "Sweet Lasers");
        break;
    case 1:
        draw_text(text_x, text_y+25, "Missile Barrage");
        break;
    default:
        draw_text(text_x, text_y+25, "Ship Launcher");
        break;
}

text_y = text_y + 65;

draw_text(text_x, text_y, "Favorite Formation");

switch(newCaptain.tacticalType) {
    case 0:
        draw_text(text_x, text_y + 25, "Aggressive Formation");
        draw_text(text_x, text_y + 65 + 25, "Shield Formation");
        break;
    case 1:
        draw_text(text_x, text_y + 25, "Volley Formation");
        draw_text(text_x, text_y + 65 + 25, "Shield Formation");
        break;
    default:
        draw_text(text_x, text_y + 25, "Shield Formation");
        draw_text(text_x, text_y + 65 + 25, "Volley Formation");
        break;
}

text_y = text_y + 65;

draw_text(text_x, text_y, "Can't Use");

text_y = text_y + 65;

draw_text(text_x, text_y, "Shiptype");

switch(newCaptain.shipType) {
    case 0:
        draw_text(text_x, text_y+25, "Frigate");
        break;
    case 1:
        draw_text(text_x, text_y+25, "Destroyer");
        break;
    case 2:
        draw_text(text_x, text_y+25, "Cruiser");
        break;
    case 3:
        draw_text(text_x, text_y+25, "Battleship");
        break;
    default:
        draw_text(text_x, text_y+25, "Missile Ship");
        break;
}

text_y = text_y + 65;

draw_text(text_x, text_y, "Cost");
draw_text(text_x, text_y+25, "50 ic");

draw_set_halign(fa_left);

// Window close button
cl_x = x + 620;
cl_y = y + 20;
if (isOnClose) {
    draw_sprite(sprite_close_true, -1, cl_x, cl_y);
} else {
    draw_sprite(sprite_close_false, -1, cl_x, cl_y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
