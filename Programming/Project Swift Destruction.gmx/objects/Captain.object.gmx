<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_captain_select_area</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>captain_name = "joe";
faceType = 0;
ability = 0;
tacticalType = 0;
shipType = 0
mouseInBounds = false;
var myRef;
inFocus = true;
fleet_id = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inFocus) {
    // Mouse detection and input
    mouseInBounds = false;
    
    if ((mouse_x &gt; x) &amp;&amp; (mouse_x &lt; x + sprite_width)) {
        if ((mouse_y &gt; y) &amp;&amp; (mouse_y &lt; y + sprite_height)) {
            // Mouse is in bounds
            mouseInBounds = true;
        }
    }
    
    if (mouseInBounds &amp;&amp; mouse_check_button_pressed(mb_left)) {
        // if the player clicks on a captain
        inFocus = false;
        scriptCaptainVisibility();
        // TargetMenu = instance_create(0, 0, obj_hire_captain_menu);
        // TargetMenu.fleet_id = fleet_id // Which fleet position to replace
        // TargetMenu.inFocus = true
        
    }
    
    if (mouseInBounds) {
        // Change the sprite
        sprite_index = sprite_captain_selected;
    } else {
        sprite_index = sprite_captain_select_area;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw Setup
draw_set_font(font_Text);
draw_set_color(c_white);
    
draw_self();
    
// Draw the portrait
switch (faceType) {
    case 0:
        draw_sprite(sprite_portrait_1, -1, x, y);
        break;
    case 1:
        draw_sprite(sprite_portrait_2, -1, x, y);
        break;
    default:
        draw_sprite(sprite_portrait_3, -1, x, y);
        break;
}
    
// show the name
draw_text(x+150, y, captain_name);
    
// Need some switch action here to show names and not numbers:
// show the tactical type
draw_text(x+150, y+30, "Tactical Type: " + string(tacticalType));
    
// show the ability
draw_text(x+150, y+60, "Ability: " + string(ability));
    
// show the ship type
draw_text(x+150, y+90, "Ship: " + string(shipType));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
