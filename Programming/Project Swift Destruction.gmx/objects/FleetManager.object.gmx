<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Enter fleet manager
drawBox = false;
inFocus = true;

fleet_instance_to_edit = 0;

box_x = 0;
box_y = 0;

capt_width = 500;
capt_height = 120;

// Load in current fleet
for(i=0; i &lt; global.shipMax; i+=1)
{
    // Check if a captain exists
    //if (instance_exists(global.fleet[i])) {
        // Populate the Captain Card
        global.fleet[i].x = floor(i/3) * 550 + 150;
        global.fleet[i].y = (i mod 3) * 150 + 150;
    /*} else {
        // Show the empty Card and show a hire banner
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>&lt;undefined&gt;</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (inFocus) {
    // Mouse detection and input
    mouseInBounds = false;
    drawBox = false;
    
    if (keyboard_check_pressed(vk_backspace) || keyboard_check_pressed(vk_escape)) {
        // go back to the strat layer
        room_goto(room_StrategyLayer);
    }
    
    for(i=0;i&lt;global.shipMax;i+=1)
    {
        
        newx = 150 + ((i mod 2) * 550);
        newy = 150 + ((i mod 3) * 150);
        
        if ((mouse_x &gt; newx) &amp;&amp; (mouse_x &lt; newx + capt_width)) {
            if ((mouse_y &gt; newy) &amp;&amp; (mouse_y &lt; newy + capt_height)) {
                // Mouse is in bounds
                mouseInBounds = true;
            }
        }
        
        if (mouseInBounds &amp;&amp; mouse_check_button_pressed(mb_left)) {
            // if the player clicks on a captain
            drawBox = false;
            inFocus = false;
            fleet_instance_to_edit = i;
            //show_message(fid);
            TargetMenu = instance_create(250, 120, obj_hire_captain_menu);
            //TargetMenu.fleet_id_ref = fid; // Which fleet position to replace
            //show_message(TargetMenu.fleet_id_ref);
        }
        
        if (mouseInBounds &amp;&amp; !drawBox) {
            // Show selection box
            drawBox = true;
            box_x = newx;
            box_y = newy;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(i=0;i&lt;global.shipMax;i+=1)
{
    if (drawBox) {
        // draw the selection box at location specified
        draw_rectangle(box_x, box_y, capt_width+box_x, capt_height+box_y, false)
    }
    
    newx = 150 + ((i mod 2) * 550);
    newy = 150 + ((i mod 3) * 150);

    // Draw Setup
    draw_set_font(font_Text);
    draw_set_color(c_white);
    
    scriptDrawCaptain(newx, newy, global.fleet[i]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
